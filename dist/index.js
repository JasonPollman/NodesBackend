'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _bluebird = require('bluebird');var _bluebird2 = _interopRequireDefault(_bluebird);var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};














/**
                                                                                                                                                                                                                                                                                                                                                                                                                           * Serves the Node Factory backend.
                                                                                                                                                                                                                                                                                                                                                                                                                           * @param {object} options Node Factory options.
                                                                                                                                                                                                                                                                                                                                                                                                                           * @returns {undefined}
                                                                                                                                                                                                                                                                                                                                                                                                                           */var serve = function () {var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(
  function _callee() {var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},dataStore = _ref2.dataStore,options = _objectWithoutProperties(_ref2, ['dataStore']);var store;return regeneratorRuntime.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.t0 =
            dataStore;if (_context.t0) {_context.next = 5;break;}_context.next = 4;return (0, _MongoMemoryStore2.default)();case 4:_context.t0 = _context.sent;case 5:store = _context.t0;return _context.abrupt('return',

            (0, _websockets2.default)(_extends({
              onSocketConnection: (0, _events2.default)((0, _NodeFactory2.default)(_extends({ store: store }, options))) },
            options)));case 7:case 'end':return _context.stop();}}}, _callee, this);}));return function serve() {return _ref.apply(this, arguments);};}();



// Only kick off the server if this file was called directly,
// Otherwise, defer execution to the requiring module.
var _debug = require('debug');var _debug2 = _interopRequireDefault(_debug);var _events = require('./events');var _events2 = _interopRequireDefault(_events);var _MongoMemoryStore = require('./MongoMemoryStore');var _MongoMemoryStore2 = _interopRequireDefault(_MongoMemoryStore);var _NodeFactory = require('./NodeFactory');var _NodeFactory2 = _interopRequireDefault(_NodeFactory);var _websockets = require('./websockets');var _websockets2 = _interopRequireDefault(_websockets);var _constants = require('./constants');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectWithoutProperties(obj, keys) {var target = {};for (var i in obj) {if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];}return target;}function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new _bluebird2.default(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return (0, _bluebird.resolve)(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};} /**
tarts the Node Factory socket server.
since 4/9/18
file
var log = (0, _debug2.default)('node-factory:index');if (module === require.main) {log('NODE_ENV is ' + _constants.NODE_ENV);var throwUnhandledRejections = function throwUnhandledRejections(e) {return process.nextTick(function () {throw e;});};serve().catch(throwUnhandledRejections);}exports.default =

serve;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJkYXRhU3RvcmUiLCJvcHRpb25zIiwic3RvcmUiLCJvblNvY2tldENvbm5lY3Rpb24iLCJzZXJ2ZSIsImxvZyIsIm1vZHVsZSIsInJlcXVpcmUiLCJtYWluIiwidGhyb3dVbmhhbmRsZWRSZWplY3Rpb25zIiwicHJvY2VzcyIsIm5leHRUaWNrIiwiZSIsImNhdGNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFlQTs7Ozs7QUFLQSxzR0FBaUQsRUFBakQsQ0FBdUJBLFNBQXZCLFNBQXVCQSxTQUF2QixDQUFxQ0MsT0FBckM7QUFDZ0JELHFCQURoQixxRUFDbUMsaUNBRG5DLDJDQUNRRSxLQURSOztBQUdTO0FBQ0xDLGtDQUFvQixzQkFBTyxzQ0FBY0QsWUFBZCxJQUF3QkQsT0FBeEIsRUFBUCxDQURmO0FBRUZBLG1CQUZFLEVBSFQsZ0UsbUJBQWVHLEs7Ozs7QUFTZjtBQUNBO0FBeEJBLDhCLDZDQUNBLGtDLCtDQUNBLHNELG1FQUNBLDRDLHlEQUNBLDBDLHVEQUNBLHdDLHF2QkFYQTs7OzsydkNBYUEsSUFBTUMsTUFBTSxxQkFBTSxvQkFBTixDQUFaLENBa0JBLElBQUlDLFdBQVdDLFFBQVFDLElBQXZCLEVBQTZCLENBQzNCSCwwQ0FDQSxJQUFNSSwyQkFBMkIsU0FBM0JBLHdCQUEyQixZQUFLQyxRQUFRQyxRQUFSLENBQWlCLFlBQU0sQ0FBRSxNQUFNQyxDQUFOLENBQVUsQ0FBbkMsQ0FBTCxFQUFqQyxDQUNBUixRQUFRUyxLQUFSLENBQWNKLHdCQUFkLEVBQ0QsQzs7QUFFY0wsSyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3RhcnRzIHRoZSBOb2RlIEZhY3Rvcnkgc29ja2V0IHNlcnZlci5cbiAqIEBzaW5jZSA0LzkvMThcbiAqIEBmaWxlXG4gKi9cblxuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJztcbmltcG9ydCBldmVudHMgZnJvbSAnLi9ldmVudHMnO1xuaW1wb3J0IE1vbmdvTWVtb3J5U3RvcmUgZnJvbSAnLi9Nb25nb01lbW9yeVN0b3JlJztcbmltcG9ydCBOb2RlRmFjdG9yeSBmcm9tICcuL05vZGVGYWN0b3J5JztcbmltcG9ydCBzZXJ2ZVdlYnNvY2tldHMgZnJvbSAnLi93ZWJzb2NrZXRzJztcbmltcG9ydCB7IE5PREVfRU5WIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBsb2cgPSBkZWJ1Zygnbm9kZS1mYWN0b3J5OmluZGV4Jyk7XG5cbi8qKlxuICogU2VydmVzIHRoZSBOb2RlIEZhY3RvcnkgYmFja2VuZC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIE5vZGUgRmFjdG9yeSBvcHRpb25zLlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gc2VydmUoeyBkYXRhU3RvcmUsIC4uLm9wdGlvbnMgfSA9IHt9KSB7XG4gIGNvbnN0IHN0b3JlID0gZGF0YVN0b3JlIHx8IGF3YWl0IE1vbmdvTWVtb3J5U3RvcmUoKTtcblxuICByZXR1cm4gc2VydmVXZWJzb2NrZXRzKHtcbiAgICBvblNvY2tldENvbm5lY3Rpb246IGV2ZW50cyhOb2RlRmFjdG9yeSh7IHN0b3JlLCAuLi5vcHRpb25zIH0pKSxcbiAgICAuLi5vcHRpb25zLFxuICB9KTtcbn1cblxuLy8gT25seSBraWNrIG9mZiB0aGUgc2VydmVyIGlmIHRoaXMgZmlsZSB3YXMgY2FsbGVkIGRpcmVjdGx5LFxuLy8gT3RoZXJ3aXNlLCBkZWZlciBleGVjdXRpb24gdG8gdGhlIHJlcXVpcmluZyBtb2R1bGUuXG5pZiAobW9kdWxlID09PSByZXF1aXJlLm1haW4pIHtcbiAgbG9nKGBOT0RFX0VOViBpcyAke05PREVfRU5WfWApO1xuICBjb25zdCB0aHJvd1VuaGFuZGxlZFJlamVjdGlvbnMgPSBlID0+IHByb2Nlc3MubmV4dFRpY2soKCkgPT4geyB0aHJvdyBlOyB9KTtcbiAgc2VydmUoKS5jYXRjaCh0aHJvd1VuaGFuZGxlZFJlamVjdGlvbnMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzZXJ2ZTtcbiJdfQ==