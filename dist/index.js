'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _bluebird = require('bluebird');var _bluebird2 = _interopRequireDefault(_bluebird);var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};














/**
                                                                                                                                                                                                                                                                                                                                                                                                                           * Serves the Node Factory backend.
                                                                                                                                                                                                                                                                                                                                                                                                                           * @param {object} options Node Factory options.
                                                                                                                                                                                                                                                                                                                                                                                                                           * @returns {undefined}
                                                                                                                                                                                                                                                                                                                                                                                                                           */var start = function () {var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(
  function _callee() {var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},dataStore = _ref2.dataStore,options = _objectWithoutProperties(_ref2, ['dataStore']);var store;return regeneratorRuntime.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.t0 =
            dataStore;if (_context.t0) {_context.next = 5;break;}_context.next = 4;return (0, _MongoMemoryStore2.default)();case 4:_context.t0 = _context.sent;case 5:store = _context.t0;return _context.abrupt('return',

            (0, _server2.default)(_extends({
              onSocketConnection: (0, _events2.default)((0, _NodeFactory2.default)(_extends({ store: store }, options))) },
            options)));case 7:case 'end':return _context.stop();}}}, _callee, this);}));return function start() {return _ref.apply(this, arguments);};}();



// Only kick off the server if this file was called directly,
// Otherwise, defer execution to the requiring module.
var _debug = require('debug');var _debug2 = _interopRequireDefault(_debug);var _events = require('./events');var _events2 = _interopRequireDefault(_events);var _server = require('./server');var _server2 = _interopRequireDefault(_server);var _MongoMemoryStore = require('./MongoMemoryStore');var _MongoMemoryStore2 = _interopRequireDefault(_MongoMemoryStore);var _NodeFactory = require('./NodeFactory');var _NodeFactory2 = _interopRequireDefault(_NodeFactory);var _constants = require('./constants');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _objectWithoutProperties(obj, keys) {var target = {};for (var i in obj) {if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];}return target;}function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new _bluebird2.default(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return (0, _bluebird.resolve)(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};} /**
tarts the Node Factory socket server.
since 4/9/18
file
var log = (0, _debug2.default)('node-factory:index');if (module === require.main) {log('NODE_ENV is ' + _constants.NODE_ENV);start().catch(function (e) {return process.nextTick(function () {throw e;});});}exports.default =
start;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJkYXRhU3RvcmUiLCJvcHRpb25zIiwic3RvcmUiLCJvblNvY2tldENvbm5lY3Rpb24iLCJzdGFydCIsImxvZyIsIm1vZHVsZSIsInJlcXVpcmUiLCJtYWluIiwiY2F0Y2giLCJwcm9jZXNzIiwibmV4dFRpY2siLCJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFlQTs7Ozs7QUFLQSxzR0FBaUQsRUFBakQsQ0FBdUJBLFNBQXZCLFNBQXVCQSxTQUF2QixDQUFxQ0MsT0FBckM7QUFDZ0JELHFCQURoQixxRUFDbUMsaUNBRG5DLDJDQUNRRSxLQURSOztBQUdTO0FBQ0xDLGtDQUFvQixzQkFBTyxzQ0FBY0QsWUFBZCxJQUF3QkQsT0FBeEIsRUFBUCxDQURmO0FBRUZBLG1CQUZFLEVBSFQsZ0UsbUJBQWVHLEs7Ozs7QUFTZjtBQUNBO0FBeEJBLDhCLDZDQUNBLGtDLCtDQUNBLGtDLCtDQUNBLHNELG1FQUNBLDRDLHlEQUNBLHdDLHF2QkFYQTs7OzsydUNBYUEsSUFBTUMsTUFBTSxxQkFBTSxvQkFBTixDQUFaLENBa0JBLElBQUlDLFdBQVdDLFFBQVFDLElBQXZCLEVBQTZCLENBQzNCSCwwQ0FDQUQsUUFBUUssS0FBUixDQUFjLHFCQUFLQyxRQUFRQyxRQUFSLENBQWlCLFlBQU0sQ0FBRSxNQUFNQyxDQUFOLENBQVUsQ0FBbkMsQ0FBTCxFQUFkLEVBQ0QsQztBQUVjUixLIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTdGFydHMgdGhlIE5vZGUgRmFjdG9yeSBzb2NrZXQgc2VydmVyLlxuICogQHNpbmNlIDQvOS8xOFxuICogQGZpbGVcbiAqL1xuXG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGV2ZW50cyBmcm9tICcuL2V2ZW50cyc7XG5pbXBvcnQgc2VydmUgZnJvbSAnLi9zZXJ2ZXInO1xuaW1wb3J0IE1vbmdvTWVtb3J5U3RvcmUgZnJvbSAnLi9Nb25nb01lbW9yeVN0b3JlJztcbmltcG9ydCBOb2RlRmFjdG9yeSBmcm9tICcuL05vZGVGYWN0b3J5JztcbmltcG9ydCB7IE5PREVfRU5WIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuXG5jb25zdCBsb2cgPSBkZWJ1Zygnbm9kZS1mYWN0b3J5OmluZGV4Jyk7XG5cbi8qKlxuICogU2VydmVzIHRoZSBOb2RlIEZhY3RvcnkgYmFja2VuZC5cbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIE5vZGUgRmFjdG9yeSBvcHRpb25zLlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqL1xuYXN5bmMgZnVuY3Rpb24gc3RhcnQoeyBkYXRhU3RvcmUsIC4uLm9wdGlvbnMgfSA9IHt9KSB7XG4gIGNvbnN0IHN0b3JlID0gZGF0YVN0b3JlIHx8IGF3YWl0IE1vbmdvTWVtb3J5U3RvcmUoKTtcblxuICByZXR1cm4gc2VydmUoe1xuICAgIG9uU29ja2V0Q29ubmVjdGlvbjogZXZlbnRzKE5vZGVGYWN0b3J5KHsgc3RvcmUsIC4uLm9wdGlvbnMgfSkpLFxuICAgIC4uLm9wdGlvbnMsXG4gIH0pO1xufVxuXG4vLyBPbmx5IGtpY2sgb2ZmIHRoZSBzZXJ2ZXIgaWYgdGhpcyBmaWxlIHdhcyBjYWxsZWQgZGlyZWN0bHksXG4vLyBPdGhlcndpc2UsIGRlZmVyIGV4ZWN1dGlvbiB0byB0aGUgcmVxdWlyaW5nIG1vZHVsZS5cbmlmIChtb2R1bGUgPT09IHJlcXVpcmUubWFpbikge1xuICBsb2coYE5PREVfRU5WIGlzICR7Tk9ERV9FTlZ9YCk7XG4gIHN0YXJ0KCkuY2F0Y2goZSA9PiBwcm9jZXNzLm5leHRUaWNrKCgpID0+IHsgdGhyb3cgZTsgfSkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdGFydDtcbiJdfQ==